{"mappings":"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","sources":["<anon>","node_modules/.pnpm/@parcel+runtime-js@2.12.0_@parcel+core@2.12.0/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.12.0_@parcel+core@2.12.0/node_modules/@parcel/runtime-js/lib/runtime-713eeccca4e5e213.js","src/js/main.js","node_modules/.pnpm/@dotburo+multi-select@1.3.3/node_modules/@dotburo/multi-select/src/multi-select.js","node_modules/.pnpm/@dotburo+multi-select@1.3.3/node_modules/@dotburo/multi-select/src/dom-component.js","node_modules/.pnpm/@dotburo+multi-select@1.3.3/node_modules/@dotburo/multi-select/src/defaults.js","src/js/ruby_conversion.js","src/js/download.min.js","node_modules/.pnpm/@parcel+runtime-js@2.12.0_@parcel+core@2.12.0/node_modules/@parcel/runtime-js/lib/runtime-6acd56068589e539.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec6a0\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec6a0\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"awTFk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $7aa812910441b77c$export$6503ec6e8aabbaf, (v) => $7aa812910441b77c$export$6503ec6e8aabbaf = v);\nvar $7aa812910441b77c$export$6503ec6e8aabbaf;\nvar $7aa812910441b77c$export$f7ad0328861e2f03;\n\"use strict\";\nvar $7aa812910441b77c$var$mapping = new Map();\nfunction $7aa812910441b77c$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$7aa812910441b77c$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $7aa812910441b77c$var$resolve(id) {\n    var resolved = $7aa812910441b77c$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$7aa812910441b77c$export$6503ec6e8aabbaf = $7aa812910441b77c$var$register;\n$7aa812910441b77c$export$f7ad0328861e2f03 = $7aa812910441b77c$var$resolve;\n\n});\n\nvar $412f02ff83fd830b$exports = {};\n\n(parcelRequire(\"awTFk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"g3LtT\",\"index.d873de12.js\",\"7iMMG\",\"js/sw.js\"]'));\n\nvar $54b47fc030b7b21e$exports = {};\nconst $660c6262632810ec$var$d = document;\nclass $660c6262632810ec$export$2e2bcd8739ae039 {\n    constructor(element, options = {}, defaults = {}){\n        this.options = Object.assign({}, defaults, options);\n        this._events = [];\n        this.dom = {\n            el: this._setElement(element)\n        };\n    }\n    /**\n     * Add/remove the toggling className\n     * @param {Boolean|undefined} show\n     * @return DomComponent\n     */ toggle(show) {\n        let classList = this.dom.el.classList;\n        if (show !== undefined) {\n            classList[show ? \"remove\" : \"add\"](\"si-off\");\n            return this;\n        }\n        classList.toggle(\"si-off\");\n        return this;\n    }\n    /**\n     * Bind a (delegated) event\n     * @param {String} event\n     * @param {Function} fn\n     * @param {HTMLElement|Document} el\n     * @return DomComponent\n     */ on(event, fn, el = null) {\n        (el || this.dom.el).addEventListener(event, fn = fn.bind(this), true);\n        this._events.push({\n            name: event,\n            fn: fn,\n            el: el\n        });\n        return this;\n    }\n    /**\n     * Return the main wrapping element\n     * @return {Element}\n     */ getElement() {\n        return this.dom.el;\n    }\n    /**\n     * Unbind all events and nullify references\n     * @return void\n     */ remove() {\n        this._events = this._events.filter((event)=>{\n            return (event.el || this.dom.el).removeEventListener(event.name, event.fn, true);\n        });\n        this.dom.el.parentNode.removeChild(this.dom.el);\n        this.dom = this.options = null;\n    }\n    /**\n     * Query the element in the DOM if its a string\n     * @param {Element|String} el\n     * @return {Element|null}\n     * @protected\n     */ _setElement(el) {\n        if (!el && !el.nodeType && typeof el !== \"string\") throw new Error(\"Wrong element type provided!\");\n        if (el.nodeType) return el;\n        return (this.options.parent || $660c6262632810ec$var$d).querySelector(el);\n    }\n    /**\n     * Communicate changes\n     * @param {String} name\n     * @param {Object|null} detail\n     * @protected\n     */ _trigger(name, detail = null) {\n        let event;\n        if (typeof CustomEvent === \"function\") event = new CustomEvent(name, {\n            detail: detail,\n            bubbles: true,\n            cancelable: true\n        });\n        else {\n            event = $660c6262632810ec$var$d.createEvent(\"CustomEvent\");\n            event.initCustomEvent(name, true, true, detail);\n        }\n        this.dom.el.dispatchEvent(event);\n    }\n}\n\n\nvar $f25299528f89fc0f$export$2e2bcd8739ae039 = {\n    items: [],\n    display: \"value\",\n    current: null,\n    parent: null,\n    maxHeight: 0,\n    sort: true,\n    order: \"desc\",\n    placeholder: \"Select items\",\n    more: \"(+{X} more)\"\n};\n\n\nconst $e32e28c64e9a35f5$var$d = document;\nclass $e32e28c64e9a35f5$export$2e2bcd8739ae039 extends (0, $660c6262632810ec$export$2e2bcd8739ae039) {\n    constructor(element, options = {}){\n        super(element, options, (0, $f25299528f89fc0f$export$2e2bcd8739ae039));\n        if (this.options.sort) this.options.items = this._sortItems(options.items);\n        this.options.items = options.items && options.items.length ? this._convertItems(options.items) : [];\n        if (options.current && options.current.length) {\n            options.current = this._convertItems(options.current);\n            this._setSelected(options.current);\n        }\n        this._renderInit();\n        this._setResultMessage();\n        this._bindEvents();\n    }\n    /**\n     * Bind the delegated dom events\n     * @private\n     */ _bindEvents() {\n        // Select or just unfold the options\n        this.on(\"click\", (e)=>{\n            if (e.target.classList.contains(\"si-item\")) return this._setCurrent(e)._setResultMessage();\n            this.toggle();\n        }, this.el);\n        // Close the dropdown if the user click outside of it\n        this.on(\"click\", (e)=>{\n            if (!this.dom.el.contains(e.target)) return this.toggle(false);\n        }, $e32e28c64e9a35f5$var$d);\n        // Fold up the dropdown if the user presses the Escape key\n        this.on(\"keyup\", (e)=>{\n            if (e.key === \"Escape\" || e.keyCode === 27) this.toggle(false);\n        }, $e32e28c64e9a35f5$var$d);\n    }\n    /**\n     * Get all items in the list\n     * @return {Object[]}\n     * @public\n     */ getItems() {\n        return Array.from(this.options.items.values());\n    }\n    /**\n     * Return the current field value object\n     * @param {string} key Only return a specific value from each current item\n     * @return {[]|null}\n     * @public\n     */ getCurrent(key = \"\") {\n        let items = this.getItems().filter((i)=>i.selected);\n        return !key ? items : items.map((i)=>i[key]);\n    }\n    /**\n     * @todo do better: setCurrent, _setCurrent & _setSelected ...\n     * @param {*|!object} currents\n     * @public\n     */ setCurrent(currents) {\n        const isArray = Array.isArray(currents);\n        if (!currents || isArray && !currents.length) return;\n        let items = this.options.items, display = this.options.display;\n        currents = isArray ? currents : [\n            currents\n        ];\n        currents = this._convertItems(currents);\n        currents.forEach((current)=>{\n            items.forEach((item, key)=>{\n                if (item[display] === current[display]) {\n                    this.dom.el.querySelector(`.si-item[data-key=\"${key}\"]`).classList.add(\"si-selected\");\n                    item.selected = true;\n                }\n            });\n        });\n        this._setResultMessage();\n    }\n    /**\n     * Find an item in the list\n     * @param {HTMLElement|String|Number} item\n     * @return {{}}\n     * @public\n     */ findItem(item) {\n        let display = this.options.display;\n        item = item.nodeName ? item.dataset.value : item;\n        return this.options.items.find((i)=>i[display] === item);\n    }\n    /**\n     *\n     * @param {Event} e\n     * @param {boolean} trigger\n     * @private\n     */ _setCurrent(e, trigger = true) {\n        let el = e.target, key = parseInt(el.dataset.key, 10), item = this.options.items.get(key);\n        item.selected = el.classList.toggle(\"si-selected\");\n        this.options.items.set(key, item);\n        if (trigger) this._trigger(\"change\", item);\n        return this;\n    }\n    /**\n     * Loop over the passed array to set selected items\n     * @param {array} currents\n     * @private\n     */ _setSelected(currents) {\n        let items = this.options.items, display = this.options.display;\n        currents.forEach((current)=>{\n            items.forEach((item)=>{\n                if (item[display] === current[display]) item.selected = true;\n            });\n        });\n    }\n    /**\n     * Display selection result message\n     * @private\n     */ _setResultMessage() {\n        let selection = this.getCurrent(), display = this.options.display, count = selection.length, result = \"\";\n        switch(count){\n            case 1:\n                result = selection[0][display];\n                break;\n            case 0:\n                result = this.options.placeholder;\n                break;\n            default:\n                result = /({X})/.test(this.options.more) ? `${selection[0][display]} ${this.options.more.replace(\"{X}\", count - 1)}` : this.options.more;\n        }\n        this.dom.result.classList[count ? \"add\" : \"remove\"](\"si-selection\");\n        this.dom.result.innerHTML = result;\n    }\n    /**\n     * Make an array of object if needed\n     * @todo better 'selected' checking: what if `current` is array of objects\n     * @param {Array} items\n     * @return {Map<Object>}\n     * @private\n     */ _convertItems(items = []) {\n        let display = this.options.display, map = new Map(), key = 0;\n        items.forEach((item)=>{\n            if (typeof item !== \"object\") item = {\n                [display]: item\n            };\n            map.set(key++, item);\n        });\n        return map;\n    }\n    /**\n     * Create the HTML upon instantiation\n     * @return {Node}\n     * @private\n     */ _renderInit() {\n        let frag = $e32e28c64e9a35f5$var$d.createDocumentFragment();\n        this.dom.el.classList.add(\"si-off\", \"si-wrap\");\n        this.dom.result = frag.appendChild(this._renderResultDiv());\n        frag.appendChild(this._renderList());\n        return this.dom.el.appendChild(frag);\n    }\n    /**\n     * Create the selection result element\n     * @return {HTMLElement}\n     * @private\n     */ _renderResultDiv() {\n        let el = $e32e28c64e9a35f5$var$d.createElement(\"div\");\n        el.className = \"si-result\";\n        return el;\n    }\n    /**\n     * Create the list element\n     * @return {HTMLElement}\n     * @private\n     */ _renderList() {\n        let wrap = $e32e28c64e9a35f5$var$d.createElement(\"div\"), el = $e32e28c64e9a35f5$var$d.createElement(\"ul\"), maxHeight = this.options.maxHeight;\n        wrap.className = \"si-list\";\n        if (maxHeight) wrap.style.maxHeight = maxHeight + \"px\";\n        el.innerHTML = this._renderListItems();\n        wrap.appendChild(el);\n        return wrap;\n    }\n    /**\n     * Create the list items\n     * @return {String}\n     * @private\n     */ _renderListItems() {\n        let items = this.options.items, display = this.options.display, list = \"\", selected;\n        items.forEach((item, key)=>{\n            selected = item.selected ? \" si-selected\" : \"\";\n            list += `<li class=\"si-item${selected}\" data-key=\"${key}\">${item[display]}</li>`;\n        });\n        return list;\n    }\n    /**\n     * Rearrange the list\n     * @private\n     */ _sortItems() {\n        let order = this.options.order === \"desc\" ? 1 : -1, display = this.options.display;\n        this.options.items.sort((a, b)=>{\n            if (a[display] < b[display]) return -order;\n            if (a[display] > b[display]) return order;\n            return 0;\n        });\n    }\n}\n\n\nvar $1b952d1406bf4379$exports = {};\n// Constants:\nconst $1b952d1406bf4379$var$POLAR_EARTH_RADIUS = 6356752.3142;\nconst $1b952d1406bf4379$var$PI = Math.PI;\nconst $1b952d1406bf4379$var$MAX_UINT4 = 4294967295;\nconst $1b952d1406bf4379$var$FT2M = 1 / 3.2808399 // factor for feet to meter conversions\n;\nconst $1b952d1406bf4379$var$KN2KM = 1 / 1.852 // factor for knots to km conversions\n;\n// Datatypes:\n// ===================================================================================================\n// Type    Definition                                          Directive for Ruby's String#unpack\n// ---------------------------------------------------------------------------------------------------\n// byte \t UInt8  (16-bit unsigned int)                                      C\n// short  UInt16LE  (16-bit unsigned int,littleEndian)                         v\n// int \t  UInt32LE  (32-bit unsigned int,littleEndian)                         V\n// float   FloatLE  (32 bits IEEE 754 floating point number,littleEndian)      e\n// flags  UInt16LE  (16-bit unsigned int,littleEndian)                         v\n// ---------------------------------------------------------------------------------------------------\nconst $1b952d1406bf4379$var$typeReaderFunctions = {\n    \"UInt8\": (dataView, offset)=>dataView.getUint8(offset, false),\n    \"UInt16LE\": (dataView, offset)=>dataView.getUint16(offset, true),\n    \"UInt32LE\": (dataView, offset)=>dataView.getUint32(offset, true),\n    \"FloatLE\": (dataView, offset)=>dataView.getFloat32(offset, true)\n} //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n;\n// Available block attributes, their offset inside each block and their type:\nlet $1b952d1406bf4379$var$block_def = {\n    \"blockSize\": {\n        \"offset\": 26,\n        \"type\": \"UInt16LE\",\n        \"len\": 2\n    },\n    \"lastBlockSize\": {\n        \"offset\": 28,\n        \"type\": \"UInt16LE\",\n        \"len\": 2\n    },\n    \"channel\": {\n        \"offset\": 30,\n        \"type\": \"UInt16LE\",\n        \"len\": 2\n    },\n    \"packetSize\": {\n        \"offset\": 32,\n        \"type\": \"UInt16LE\",\n        \"len\": 2\n    },\n    \"frameIndex\": {\n        \"offset\": 34,\n        \"type\": \"UInt32LE\",\n        \"len\": 4\n    },\n    \"upperLimit\": {\n        \"offset\": 38,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"lowerLimit\": {\n        \"offset\": 42,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"frequency\": {\n        \"offset\": 51,\n        \"type\": \"UInt8\",\n        \"len\": 1\n    },\n    \"time1\": {\n        \"offset\": 58,\n        \"type\": \"UInt16LE\",\n        \"len\": 4\n    },\n    \"waterDepthFt\": {\n        \"offset\": 62,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"keelDepthFt\": {\n        \"offset\": 66,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"speedGpsKnots\": {\n        \"offset\": 98,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"temperature\": {\n        \"offset\": 102,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"raw_lowrance_longitude\": {\n        \"offset\": 106,\n        \"type\": \"UInt32LE\",\n        \"len\": 4\n    },\n    \"raw_lowrance_latitude\": {\n        \"offset\": 110,\n        \"type\": \"UInt32LE\",\n        \"len\": 4\n    },\n    \"speedWaterKnots\": {\n        \"offset\": 114,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"courseOverGround\": {\n        \"offset\": 118,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"altitudeFt\": {\n        \"offset\": 122,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"heading\": {\n        \"offset\": 126,\n        \"type\": \"FloatLE\",\n        \"len\": 4\n    },\n    \"flags\": {\n        \"offset\": 130,\n        \"type\": \"UInt16LE\",\n        \"len\": 2\n    },\n    \"time\": {\n        \"offset\": 138,\n        \"type\": \"UInt32LE\",\n        \"len\": 4\n    } // unknown resolution, unknown epoche\n};\nfunction $1b952d1406bf4379$var$readBlock(dataView, block_offset) {\n    let output = {};\n    for(const key in $1b952d1406bf4379$var$block_def)if (Object.hasOwnProperty.call($1b952d1406bf4379$var$block_def, key)) {\n        const value_byte_offset = block_offset + $1b952d1406bf4379$var$block_def[key].offset;\n        const length = $1b952d1406bf4379$var$block_def[key].len;\n        const type = $1b952d1406bf4379$var$block_def[key].type;\n        const typeReader = $1b952d1406bf4379$var$typeReaderFunctions[type];\n        output[key] = typeReader(dataView, value_byte_offset);\n    // console.log(`${key} is ${value_byte_offset}`)\n    }\n    return output;\n}\nfunction $1b952d1406bf4379$var$getLinebreak() {\n    if (navigator.userAgent.indexOf(\"Windows\") != -1) return \"\\r\\n\";\n    else return \"\\n\";\n}\nfunction $1b952d1406bf4379$var$convert_sl2(sl2_file_buffer, progress_callback) {\n    return new Promise((resolve, reject)=>{\n        let alive_counter = 0 // counter to regularly show, that the script is still running\n        ;\n        let output_rows = [];\n        let block_offset = 0;\n        block_offset += 10 // Startindex of the first block (i.e. skip the 10 Bytes of Header)\n        ;\n        const dataView = new DataView(sl2_file_buffer, 0);\n        const sl2_file_size = dataView.byteLength;\n        console.log(sl2_file_size, block_offset);\n        var starting_laurence_latitude = null, starting_lowrance_longitude = null;\n        var loop = setInterval(()=>{\n            if (block_offset >= sl2_file_size) {\n                // When finished, output some statistics:\n                console.log(\"Found and decoded \" + output_rows.length + \"data blocks.\");\n                clearInterval(loop);\n                resolve(output_rows);\n                return;\n            }\n            if (alive_counter % 100 == 0) {\n                var percent = 100.0 * block_offset / sl2_file_size;\n                console.log(`${Math.round(percent)}% done...`);\n                progress_callback(Math.round(percent));\n            }\n            alive_counter += 1;\n            let outputRow = $1b952d1406bf4379$var$readBlock(dataView, block_offset);\n            // A few conversions into non-proprietary or metric formats:\n            // =========================================================\n            if (outputRow[\"raw_lowrance_latitude\"] != undefined) {\n                outputRow[\"latitude\"] = (2 * Math.atan(Math.exp(outputRow[\"raw_lowrance_latitude\"] / $1b952d1406bf4379$var$POLAR_EARTH_RADIUS)) - $1b952d1406bf4379$var$PI / 2) * (180 / $1b952d1406bf4379$var$PI);\n                // Calculate the displacement of the current point from the starting point using the raw laurence lat values:\n                if (starting_laurence_latitude == null) starting_laurence_latitude = outputRow[\"raw_lowrance_latitude\"];\n                outputRow[\"y_displacement\"] = outputRow[\"raw_lowrance_latitude\"] - starting_laurence_latitude;\n            }\n            if (outputRow[\"raw_lowrance_longitude\"] != undefined) {\n                outputRow[\"longitude\"] = outputRow[\"raw_lowrance_longitude\"] / $1b952d1406bf4379$var$POLAR_EARTH_RADIUS * (180 / $1b952d1406bf4379$var$PI);\n                // [ Caution! ] If the expected longitude (in decimal degrees) is *negative*, use the following line instead:\n                if (outputRow[\"longitude\"] > 180) outputRow[\"longitude\"] = (outputRow[\"raw_lowrance_longitude\"] - $1b952d1406bf4379$var$MAX_UINT4) / $1b952d1406bf4379$var$POLAR_EARTH_RADIUS * (180 / $1b952d1406bf4379$var$PI);\n                // Calculate the displacement of the current point from the starting point using the raw laurence lon values:\n                if (starting_lowrance_longitude == null) starting_lowrance_longitude = outputRow[\"raw_lowrance_longitude\"];\n                outputRow[\"x_displacement\"] = outputRow[\"raw_lowrance_longitude\"] - starting_lowrance_longitude;\n            }\n            if (outputRow[\"waterDepthFt\"] != undefined) {\n                outputRow[\"waterDepthFt\"] *= -1;\n                outputRow[\"waterDepthM\"] = outputRow[\"waterDepthFt\"] * $1b952d1406bf4379$var$FT2M;\n            }\n            if (outputRow[\"keelDepthFt\"] != undefined) {\n                outputRow[\"keelDepthFt\"] *= -1;\n                outputRow[\"keelDepthM\"] = outputRow[\"keelDepthFt\"] * $1b952d1406bf4379$var$FT2M;\n            }\n            if (outputRow[\"altitudeFt\"] != undefined) outputRow[\"altitudeM\"] = outputRow[\"altitudeFt\"] * $1b952d1406bf4379$var$FT2M;\n            if (outputRow[\"speedGpsKnots\"] != undefined) outputRow[\"speedGpsKm\"] = outputRow[\"speedGpsKnots\"] * $1b952d1406bf4379$var$KN2KM;\n            // console.log(\"Read block:\", outputRow)\n            if (outputRow[\"blockSize\"] == 0) {\n                alert(\"ABORTING! (sl2 file may be corrupt): blockSize = 0 found which will otherwise lead to endless loop.\");\n                reject(\"Corrupt sl2 file\");\n                return;\n            }\n            block_offset += outputRow[\"blockSize\"];\n            // // Save only one set of data per GPS position to csv-file:\n            // unless output_h[[h['latitude'], h['longitude']]]\n            // output_h[[h['latitude'], h['longitude']]] = h['waterDepthM']\n            output_rows.push(outputRow);\n        }, 0);\n    });\n}\n$1b952d1406bf4379$exports = {\n    \"convert_sl2\": $1b952d1406bf4379$var$convert_sl2\n};\n\n\nvar $bcfa223af1a5e435$exports = {};\n//download.js v4.21, by dandavis; 2008-2018. [MIT] see http://danml.com/download.html for tests/usage\n(function(root, factory) {\n    typeof define == \"function\" && define.amd ? define([], factory) : $bcfa223af1a5e435$exports = factory();\n})($bcfa223af1a5e435$exports, function() {\n    return function download(data, strFileName, strMimeType) {\n        var self = window, defaultMime = \"application/octet-stream\", mimeType = strMimeType || defaultMime, payload = data, url = !strFileName && !strMimeType && payload, anchor = document.createElement(\"a\"), toString = function(a) {\n            return String(a);\n        }, myBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString, fileName = strFileName || \"download\", blob, reader;\n        myBlob = myBlob.call ? myBlob.bind(self) : Blob, String(this) === \"true\" && (payload = [\n            payload,\n            mimeType\n        ], mimeType = payload[0], payload = payload[1]);\n        if (url && url.length < 2048) {\n            fileName = url.split(\"/\").pop().split(\"?\")[0], anchor.href = url;\n            if (anchor.href.indexOf(url) !== -1) {\n                var ajax = new XMLHttpRequest;\n                return ajax.open(\"GET\", url, !0), ajax.responseType = \"blob\", ajax.onload = function(e) {\n                    download(e.target.response, fileName, defaultMime);\n                }, setTimeout(function() {\n                    ajax.send();\n                }, 0), ajax;\n            }\n        }\n        if (/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)) {\n            if (!(payload.length > 2096103.424 && myBlob !== toString)) return navigator.msSaveBlob ? navigator.msSaveBlob(dataUrlToBlob(payload), fileName) : saver(payload);\n            payload = dataUrlToBlob(payload), mimeType = payload.type || defaultMime;\n        } else if (/([\\x80-\\xff])/.test(payload)) {\n            var i = 0, tempUiArr = new Uint8Array(payload.length), mx = tempUiArr.length;\n            for(i; i < mx; ++i)tempUiArr[i] = payload.charCodeAt(i);\n            payload = new myBlob([\n                tempUiArr\n            ], {\n                type: mimeType\n            });\n        }\n        blob = payload instanceof myBlob ? payload : new myBlob([\n            payload\n        ], {\n            type: mimeType\n        });\n        function dataUrlToBlob(strUrl) {\n            var parts = strUrl.split(/[:;,]/), type = parts[1], indexDecoder = strUrl.indexOf(\"charset\") > 0 ? 3 : 2, decoder = parts[indexDecoder] == \"base64\" ? atob : decodeURIComponent, binData = decoder(parts.pop()), mx = binData.length, i = 0, uiArr = new Uint8Array(mx);\n            for(i; i < mx; ++i)uiArr[i] = binData.charCodeAt(i);\n            return new myBlob([\n                uiArr\n            ], {\n                type: type\n            });\n        }\n        function saver(url, winMode) {\n            if (\"download\" in anchor) return anchor.href = url, anchor.setAttribute(\"download\", fileName), anchor.className = \"download-js-link\", anchor.innerHTML = \"downloading...\", anchor.style.display = \"none\", anchor.addEventListener(\"click\", function(e) {\n                e.stopPropagation(), this.removeEventListener(\"click\", arguments.callee);\n            }), document.body.appendChild(anchor), setTimeout(function() {\n                anchor.click(), document.body.removeChild(anchor), winMode === !0 && setTimeout(function() {\n                    self.URL.revokeObjectURL(anchor.href);\n                }, 250);\n            }, 66), !0;\n            if (/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) return /^data:/.test(url) && (url = \"data:\" + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime)), window.open(url) || confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\") && (location.href = url), !0;\n            var f = document.createElement(\"iframe\");\n            document.body.appendChild(f), !winMode && /^data:/.test(url) && (url = \"data:\" + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime)), f.src = url, setTimeout(function() {\n                document.body.removeChild(f);\n            }, 333);\n        }\n        if (navigator.msSaveBlob) return navigator.msSaveBlob(blob, fileName);\n        if (self.URL) saver(self.URL.createObjectURL(blob), !0);\n        else {\n            if (typeof blob == \"string\" || blob.constructor === toString) try {\n                return saver(\"data:\" + mimeType + \";base64,\" + self.btoa(blob));\n            } catch (y) {\n                return saver(\"data:\" + mimeType + \",\" + encodeURIComponent(blob));\n            }\n            reader = new FileReader, reader.onload = function(e) {\n                saver(this.result);\n            }, reader.readAsDataURL(blob);\n        }\n        return !0;\n    };\n});\n\n\nvar $66a00a1111e176ae$exports = {};\n$66a00a1111e176ae$exports = new URL(\"js/sw.js\", import.meta.url).toString();\n\n\n// Register service worker to control making site work offline\nif (\"serviceWorker\" in navigator) navigator.serviceWorker.register($66a00a1111e176ae$exports).then(()=>{\n    console.log(\"Service Worker Registered\");\n});\nwindow.addEventListener(\"load\", function() {\n    console.log(\"Page loaded\");\n    const inputElement = document.getElementById(\"input\");\n    inputElement.addEventListener(\"change\", $54b47fc030b7b21e$var$handleFiles, false);\n});\nfunction $54b47fc030b7b21e$var$setMessage(message) {\n    document.getElementById(\"message\").innerHTML = message;\n}\nfunction $54b47fc030b7b21e$var$getLinebreak() {\n    if (navigator.userAgent.indexOf(\"Windows\") != -1) return \"\\r\\n\";\n    return \"\\n\";\n}\nvar $54b47fc030b7b21e$var$columnSelector;\nfunction $54b47fc030b7b21e$var$addColumnSelctionPicker(resultObject) {\n    // var selectParent = document.getElementById(\"Column_Selector\")\n    var options = [];\n    for(var key in resultObject[0])options.push(key);\n    $54b47fc030b7b21e$var$columnSelector = new (0, $e32e28c64e9a35f5$export$2e2bcd8739ae039)(\"#Column_Selector\", {\n        items: options,\n        current: [\n            \"latitude\",\n            \"longitude\",\n            \"waterDepthM\"\n        ],\n        sort: false,\n        placeholder: \"Select columns to include\"\n    });\n}\n// function getSelectValues(selectElem) {\n//     var result = [];\n//     var options = selectElem && selectElem.options;\n//     var opt;\n//     for (var i = 0, iLen = options.length; i < iLen; i++) {\n//         opt = options[i];\n//         if (opt.selected) {\n//             result.push(opt.value || opt.text);\n//         }\n//     }\n//     return result;\n// }\nfunction $54b47fc030b7b21e$var$getSelectedColumns() {\n    // var select = document.getElementById(\"mySelect\")\n    var selectedOptions = $54b47fc030b7b21e$var$columnSelector.getCurrent();\n    var result = {};\n    for(var i = 0; i < selectedOptions.length; i++)result[selectedOptions[i].value] = true;\n    return result;\n}\nfunction $54b47fc030b7b21e$var$resultToCSV(resultObject, columsToInclude) {\n    let columns = Object.keys(resultObject[0]).filter((rowName)=>{\n        return columsToInclude[rowName] == true;\n    });\n    let output_csv_string = columns.join(\",\") + $54b47fc030b7b21e$var$getLinebreak();\n    // Finally every row is written to the csv string:\n    for(var i = 0; i < resultObject.length; i++)output_csv_string += Object.keys(resultObject[i]).filter((rowName)=>{\n        return columsToInclude[rowName] == true;\n    }).map((keyName)=>{\n        return resultObject[i][keyName].toString();\n    }).join(\",\") + $54b47fc030b7b21e$var$getLinebreak();\n    return output_csv_string;\n}\nfunction $54b47fc030b7b21e$var$resultToKML(resultObject) {\n    let output_kml_string = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n      <name>SonarConverted.kml</name>\r\n      <open>1</open>\r\n      <Placemark>\r\n        <name>SonarPath</name>\r\n        <LineString>\r\n          <extrude>1</extrude>\r\n          <tessellate>1</tessellate>\r\n          <altitudeMode>relativeToGround</altitudeMode>\r\n          <coordinates>\r\n          `;\n    // every row is written to the kml string:\n    for(var i = 0; i < resultObject.length; i++)output_kml_string += [\n        \"longitude\",\n        \"latitude\",\n        \"waterDepthM\"\n    ].map((keyName)=>{\n        // if (keyName == \"waterDepthM\") resultObject[i][keyName] *= -1;\n        return resultObject[i][keyName].toString();\n    }).join(\",\") + ` `; // space char\n    output_kml_string += `\r\n                </coordinates>\r\n            </LineString>\r\n        </Placemark>\r\n    </Document>\r\n    </kml>\r\n    `;\n    return output_kml_string;\n}\nfunction $54b47fc030b7b21e$var$handleFiles(evt) {\n    var files = evt.target.files;\n    var file = files[0];\n    function downloadCSV(string) {\n        $bcfa223af1a5e435$exports(string, file.name + \"_converted.csv\", \"text/csv\");\n    }\n    function downloadKML(string) {\n        $bcfa223af1a5e435$exports(string, file.name + \"_converted.kml\", \"application/vnd.google-earth.kml+xml\");\n    }\n    function conversionCompleteHandler(output) {\n        $54b47fc030b7b21e$var$setMessage(\"Done!\");\n        $54b47fc030b7b21e$var$addColumnSelctionPicker(output);\n        var button = document.getElementById(\"download_button\");\n        button.parentNode.style.display = \"block\";\n        button.onclick = function() {\n            var output_format = document.getElementById(\"Output_Format\").value;\n            // if csv is the selected format:\n            if (output_format == \"csv\") downloadCSV($54b47fc030b7b21e$var$resultToCSV(output, $54b47fc030b7b21e$var$getSelectedColumns()));\n            else if (output_format == \"kml\") downloadKML($54b47fc030b7b21e$var$resultToKML(output));\n        };\n    }\n    var jsFileReader = new FileReader();\n    jsFileReader.onload = function(event) {\n        var file_contents = event.target.result;\n        console.log(\"Loaded file: \", file_contents);\n        document.getElementById(\"Info_Text\").style.display = \"none\";\n        document.getElementById(\"input\").disabled = \"true\";\n        var message_el = document.getElementById(\"message\");\n        var progress_el = document.getElementById(\"progress-bar\");\n        message_el.innerHTML = \"Converting... (May make page unresponsive)\";\n        progress_el.style.display = \"block\";\n        // setTimeout(function () { // give the message time to be displayed before blocking the UI thread.\n        $1b952d1406bf4379$exports.convert_sl2(file_contents, (percent_done)=>{\n            console.log(\"Progress: \", percent_done);\n            message_el.innerHTML = `Converting... ${percent_done}% done`;\n            progress_el.value = percent_done / 100.0;\n        }).then((output)=>{\n            progress_el.style.display = \"none\";\n            conversionCompleteHandler(output);\n        }).catch((error)=>{\n            console.error(\"Conversion failed: \", error);\n            progress_el.style.display = \"none\";\n            message_el.innerHTML = \"Conversion failed. Please reload the page and try again.\";\n        });\n    // }, 10);\n    };\n    jsFileReader.readAsArrayBuffer(file);\n}\n$54b47fc030b7b21e$exports = {};\n\n\n//# sourceMappingURL=index.d873de12.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"g3LtT\\\",\\\"index.d873de12.js\\\",\\\"7iMMG\\\",\\\"js/sw.js\\\"]\"));","var sl2 = require('./ruby_conversion.js');\r\nvar download = require('./download.min.js')\r\n// var MultiSelect = require('./multi-select-umd.js')\r\nimport MultiSelect from '@dotburo/multi-select';\r\n\r\n\r\n// Register service worker to control making site work offline\r\nif ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker\r\n        .register(new URL('sw.js', import.meta.url))\r\n        .then(() => { console.log('Service Worker Registered'); });\r\n}\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n    console.log(\"Page loaded\");\r\n    const inputElement = document.getElementById(\"input\");\r\n    inputElement.addEventListener(\"change\", handleFiles, false);\r\n})\r\n\r\nfunction setMessage(message) {\r\n    document.getElementById(\"message\").innerHTML = message;\r\n}\r\n\r\n\r\nfunction getLinebreak() {\r\n    if (navigator.userAgent.indexOf(\"Windows\") != -1) {\r\n        return \"\\r\\n\";\r\n    }\r\n    return \"\\n\";\r\n}\r\n\r\nvar columnSelector;\r\nfunction addColumnSelctionPicker(resultObject) {\r\n    // var selectParent = document.getElementById(\"Column_Selector\")\r\n\r\n    var options = []\r\n\r\n    for (var key in resultObject[0]) {\r\n        options.push(key);\r\n    }\r\n\r\n    columnSelector = new MultiSelect(\"#Column_Selector\", {\r\n        items: options,\r\n        current: [\"latitude\", \"longitude\", \"waterDepthM\"],\r\n        sort: false,\r\n        placeholder: \"Select columns to include\",\r\n    })\r\n}\r\n\r\n// function getSelectValues(selectElem) {\r\n//     var result = [];\r\n//     var options = selectElem && selectElem.options;\r\n//     var opt;\r\n\r\n//     for (var i = 0, iLen = options.length; i < iLen; i++) {\r\n//         opt = options[i];\r\n\r\n//         if (opt.selected) {\r\n//             result.push(opt.value || opt.text);\r\n//         }\r\n//     }\r\n//     return result;\r\n// }\r\n\r\nfunction getSelectedColumns() {\r\n    // var select = document.getElementById(\"mySelect\")\r\n    var selectedOptions = columnSelector.getCurrent();\r\n    var result = {}\r\n    for (var i = 0; i < selectedOptions.length; i++) {\r\n        result[selectedOptions[i].value] = true;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction resultToCSV(resultObject, columsToInclude) {\r\n    let columns = Object.keys(resultObject[0]).filter((rowName) => {\r\n        return columsToInclude[rowName] == true;\r\n    })\r\n    let output_csv_string = columns.join(\",\") + getLinebreak();\r\n\r\n    // Finally every row is written to the csv string:\r\n    for (var i = 0; i < resultObject.length; i++) {\r\n        output_csv_string += Object.keys(resultObject[i]).filter((rowName) => {\r\n            return columsToInclude[rowName] == true;\r\n        }).map((keyName) => {\r\n            return resultObject[i][keyName].toString();\r\n        }).join(\",\") + getLinebreak();\r\n    }\r\n\r\n    return output_csv_string;\r\n}\r\n\r\nfunction resultToKML(resultObject) {\r\n    let output_kml_string = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <kml xmlns=\"http://www.opengis.net/kml/2.2\">\r\n    <Document>\r\n      <name>SonarConverted.kml</name>\r\n      <open>1</open>\r\n      <Placemark>\r\n        <name>SonarPath</name>\r\n        <LineString>\r\n          <extrude>1</extrude>\r\n          <tessellate>1</tessellate>\r\n          <altitudeMode>relativeToGround</altitudeMode>\r\n          <coordinates>\r\n          `\r\n\r\n    // every row is written to the kml string:\r\n    for (var i = 0; i < resultObject.length; i++) {\r\n        output_kml_string += [\"longitude\", \"latitude\", \"waterDepthM\"].map((keyName) => {\r\n            // if (keyName == \"waterDepthM\") resultObject[i][keyName] *= -1;\r\n            return resultObject[i][keyName].toString();\r\n        }).join(\",\") + ` `; // space char\r\n    }\r\n\r\n    output_kml_string += `\r\n                </coordinates>\r\n            </LineString>\r\n        </Placemark>\r\n    </Document>\r\n    </kml>\r\n    `\r\n    return output_kml_string;\r\n}\r\n\r\n\r\nfunction handleFiles(evt) {\r\n    var files = evt.target.files;\r\n    var file = files[0];\r\n\r\n    function downloadCSV(string) {\r\n        download(string, file.name + \"_converted.csv\", \"text/csv\")\r\n    }\r\n\r\n    function downloadKML(string) {\r\n        download(string, file.name + \"_converted.kml\", \"application/vnd.google-earth.kml+xml\")\r\n    }\r\n\r\n    function conversionCompleteHandler(output) {\r\n        setMessage(\"Done!\");\r\n        addColumnSelctionPicker(output);\r\n\r\n        var button = document.getElementById(\"download_button\")\r\n        button.parentNode.style.display = 'block';\r\n        button.onclick = function () {\r\n            var output_format = document.getElementById(\"Output_Format\").value\r\n            // if csv is the selected format:\r\n            if (output_format == \"csv\") {\r\n                downloadCSV(resultToCSV(output, getSelectedColumns()));\r\n            } else if (output_format == \"kml\") {\r\n                downloadKML(resultToKML(output));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    var jsFileReader = new FileReader();\r\n    jsFileReader.onload = function (event) {\r\n        var file_contents = event.target.result\r\n        console.log(\"Loaded file: \", file_contents);\r\n        document.getElementById(\"Info_Text\").style.display = \"none\";\r\n        document.getElementById(\"input\").disabled = \"true\";\r\n        var message_el = document.getElementById(\"message\");\r\n        var progress_el = document.getElementById(\"progress-bar\");\r\n        message_el.innerHTML = \"Converting... (May make page unresponsive)\";\r\n        progress_el.style.display = \"block\";\r\n        // setTimeout(function () { // give the message time to be displayed before blocking the UI thread.\r\n        sl2.convert_sl2(file_contents, (percent_done) => {\r\n            console.log(\"Progress: \", percent_done);\r\n            message_el.innerHTML = `Converting... ${percent_done}% done`;\r\n            progress_el.value = percent_done / 100.0;\r\n        }).then((output) => {\r\n            progress_el.style.display = \"none\";\r\n            conversionCompleteHandler(output);\r\n        }).catch((error) => {\r\n            console.error(\"Conversion failed: \", error);\r\n            progress_el.style.display = \"none\";\r\n            message_el.innerHTML = \"Conversion failed. Please reload the page and try again.\";\r\n        });\r\n        // }, 10);\r\n    }\r\n    jsFileReader.readAsArrayBuffer(file)\r\n\r\n}\r\n\r\nmodule.exports = {}\r\n","import DomHelper from './dom-component.js';\nimport defaults from './defaults.js';\n\nconst d = document;\n\nexport default class MultiSelect extends DomHelper {\n    constructor(element, options = {}) {\n        super(element, options, defaults);\n\n        if (this.options.sort) {\n            this.options.items = this._sortItems(options.items);\n        }\n\n        this.options.items = options.items && options.items.length\n            ? this._convertItems(options.items)\n            : [];\n\n        if (options.current && options.current.length) {\n            options.current = this._convertItems(options.current);\n            this._setSelected(options.current);\n        }\n\n        this._renderInit();\n\n        this._setResultMessage();\n\n        this._bindEvents();\n    }\n\n    /**\n     * Bind the delegated dom events\n     * @private\n     */\n    _bindEvents() {\n        // Select or just unfold the options\n        this.on('click', e => {\n            if (e.target.classList.contains('si-item')) return this._setCurrent(e)._setResultMessage();\n            this.toggle();\n        }, this.el);\n\n        // Close the dropdown if the user click outside of it\n        this.on('click', e => {\n            if (!this.dom.el.contains(e.target)) return this.toggle(false);\n        }, d);\n\n        // Fold up the dropdown if the user presses the Escape key\n        this.on('keyup', e => {\n            if (e.key === 'Escape' || e.keyCode === 27) this.toggle(false);\n        }, d);\n    }\n\n    /**\n     * Get all items in the list\n     * @return {Object[]}\n     * @public\n     */\n    getItems() {\n        return Array.from(this.options.items.values());\n    }\n\n    /**\n     * Return the current field value object\n     * @param {string} key Only return a specific value from each current item\n     * @return {[]|null}\n     * @public\n     */\n    getCurrent(key = '') {\n        let items = this.getItems().filter(i => i.selected);\n        return !key ? items : items.map(i => i[key]);\n    }\n\n    /**\n     * @todo do better: setCurrent, _setCurrent & _setSelected ...\n     * @param {*|!object} currents\n     * @public\n     */\n    setCurrent(currents) {\n        const isArray = Array.isArray(currents);\n\n        if (!currents || (isArray && !currents.length)) {\n            return;\n        }\n\n        let items = this.options.items,\n            display = this.options.display;\n\n        currents = isArray ? currents : [currents];\n        currents = this._convertItems(currents);\n\n        currents.forEach(current => {\n            items.forEach((item, key) => {\n                if (item[display] === current[display]) {\n                    this.dom.el.querySelector(`.si-item[data-key=\"${key}\"]`).classList.add('si-selected');\n                    item.selected = true;\n                }\n            });\n        });\n\n        this._setResultMessage();\n    }\n\n    /**\n     * Find an item in the list\n     * @param {HTMLElement|String|Number} item\n     * @return {{}}\n     * @public\n     */\n    findItem(item) {\n        let display = this.options.display;\n        item = item.nodeName ? item.dataset.value : item;\n        return this.options.items.find(i => i[display] === item);\n    }\n\n    /**\n     *\n     * @param {Event} e\n     * @param {boolean} trigger\n     * @private\n     */\n    _setCurrent(e, trigger = true) {\n        let el = e.target,\n            key = parseInt(el.dataset.key, 10),\n            item = this.options.items.get(key);\n\n        item.selected = el.classList.toggle('si-selected');\n        this.options.items.set(key, item);\n        if (trigger) this._trigger('change', item);\n        return this;\n    }\n\n    /**\n     * Loop over the passed array to set selected items\n     * @param {array} currents\n     * @private\n     */\n    _setSelected(currents) {\n        let items = this.options.items,\n            display = this.options.display;\n\n        currents.forEach(current => {\n            items.forEach(item => {\n                if (item[display] === current[display]) {\n                    item.selected = true;\n                }\n            });\n        });\n    }\n\n    /**\n     * Display selection result message\n     * @private\n     */\n    _setResultMessage() {\n        let selection = this.getCurrent(),\n            display = this.options.display,\n            count = selection.length,\n            result = '';\n\n        switch (count) {\n            case 1:\n                result = selection[0][display];\n                break;\n            case 0:\n                result = this.options.placeholder;\n                break;\n            default:\n                result = /({X})/.test(this.options.more)\n                    ? `${selection[0][display]} ${this.options.more.replace('{X}', count - 1)}`\n                    : this.options.more;\n        }\n\n        this.dom.result.classList[count ? 'add' : 'remove']('si-selection');\n        this.dom.result.innerHTML = result;\n    }\n\n    /**\n     * Make an array of object if needed\n     * @todo better 'selected' checking: what if `current` is array of objects\n     * @param {Array} items\n     * @return {Map<Object>}\n     * @private\n     */\n    _convertItems(items = []) {\n        let display = this.options.display,\n            map = new Map(),\n            key = 0;\n\n        items.forEach(item => {\n            if (typeof item !== 'object') item = {[display]: item};\n            map.set(key++, item);\n        });\n\n        return map;\n    }\n\n    /**\n     * Create the HTML upon instantiation\n     * @return {Node}\n     * @private\n     */\n    _renderInit() {\n        let frag = d.createDocumentFragment();\n\n        this.dom.el.classList.add('si-off', 'si-wrap');\n        this.dom.result = frag.appendChild(this._renderResultDiv());\n\n        frag.appendChild(this._renderList());\n        return this.dom.el.appendChild(frag);\n    }\n\n    /**\n     * Create the selection result element\n     * @return {HTMLElement}\n     * @private\n     */\n    _renderResultDiv() {\n        let el = d.createElement('div');\n        el.className = 'si-result';\n        return el;\n    }\n\n    /**\n     * Create the list element\n     * @return {HTMLElement}\n     * @private\n     */\n    _renderList() {\n        let wrap = d.createElement('div'),\n            el = d.createElement('ul'),\n            maxHeight = this.options.maxHeight;\n\n        wrap.className = 'si-list';\n\n        if (maxHeight) wrap.style.maxHeight = maxHeight + 'px';\n\n        el.innerHTML = this._renderListItems();\n\n        wrap.appendChild(el);\n\n        return wrap;\n    }\n\n    /**\n     * Create the list items\n     * @return {String}\n     * @private\n     */\n    _renderListItems() {\n        let items = this.options.items,\n            display = this.options.display,\n            list = '',\n            selected;\n\n        items.forEach((item, key) => {\n            selected = item.selected ? ' si-selected' : '';\n            list += `<li class=\"si-item${selected}\" data-key=\"${key}\">${item[display]}</li>`;\n        });\n\n        return list;\n    }\n\n    /**\n     * Rearrange the list\n     * @private\n     */\n    _sortItems() {\n        let order = this.options.order === 'desc' ? 1 : -1,\n            display = this.options.display;\n        this.options.items.sort((a, b) => {\n            if (a[display] < b[display]) return -order;\n            if (a[display] > b[display]) return order;\n            return 0;\n        });\n    }\n}\n","const d = document;\n\nexport default class DomComponent {\n    constructor(element, options = {}, defaults = {}) {\n        this.options = Object.assign({}, defaults, options);\n\n        this._events = [];\n\n        this.dom = {\n            el: this._setElement(element)\n        };\n    }\n\n    /**\n     * Add/remove the toggling className\n     * @param {Boolean|undefined} show\n     * @return DomComponent\n     */\n    toggle(show = undefined) {\n        let classList = this.dom.el.classList;\n        if (show !== undefined) {\n            classList[show ? 'remove' : 'add']('si-off');\n            return this;\n        }\n        classList.toggle('si-off');\n        return this;\n    }\n\n    /**\n     * Bind a (delegated) event\n     * @param {String} event\n     * @param {Function} fn\n     * @param {HTMLElement|Document} el\n     * @return DomComponent\n     */\n    on(event, fn, el = null) {\n\n        (el || this.dom.el).addEventListener(event, fn = fn.bind(this), true);\n\n        this._events.push({\n            name: event,\n            fn: fn,\n            el: el\n        });\n\n        return this;\n    }\n\n    /**\n     * Return the main wrapping element\n     * @return {Element}\n     */\n    getElement() {\n        return this.dom.el;\n    }\n\n    /**\n     * Unbind all events and nullify references\n     * @return void\n     */\n    remove() {\n        this._events = this._events.filter(event => {\n            return (event.el || this.dom.el).removeEventListener(event.name, event.fn, true);\n        });\n        this.dom.el.parentNode.removeChild(this.dom.el);\n        this.dom = this.options = null;\n    }\n\n    /**\n     * Query the element in the DOM if its a string\n     * @param {Element|String} el\n     * @return {Element|null}\n     * @protected\n     */\n    _setElement(el) {\n        if (!el && !el.nodeType && typeof el !== 'string') {\n            throw new Error('Wrong element type provided!');\n        }\n        if (el.nodeType) return el;\n        return (this.options.parent || d).querySelector(el);\n    }\n\n    /**\n     * Communicate changes\n     * @param {String} name\n     * @param {Object|null} detail\n     * @protected\n     */\n    _trigger(name, detail = null) {\n        let event;\n\n        if (typeof CustomEvent === 'function') {\n            event = new CustomEvent(name, {\n                detail: detail,\n                bubbles: true,\n                cancelable: true\n            });\n        } else {\n            event = d.createEvent('CustomEvent');\n            event.initCustomEvent(name, true, true, detail);\n        }\n\n        this.dom.el.dispatchEvent(event);\n    }\n}\n","export default {\n    items: [],\n    display: 'value',\n    current: null,\n    parent: null,\n    maxHeight: 0,\n    sort: true,\n    order: 'desc',\n    placeholder: 'Select items',\n    more: '(+{X} more)'\n};\n","\n\n// Constants:\nconst POLAR_EARTH_RADIUS = 6356752.3142\nconst PI = Math.PI\nconst MAX_UINT4 = 4294967295\nconst FT2M = 1 / 3.2808399  // factor for feet to meter conversions\nconst KN2KM = 1 / 1.852     // factor for knots to km conversions\n\n// Datatypes:\n// ===================================================================================================\n// Type    Definition                                          Directive for Ruby's String#unpack\n// ---------------------------------------------------------------------------------------------------\n// byte \t UInt8  (16-bit unsigned int)                                      C\n// short  UInt16LE  (16-bit unsigned int,littleEndian)                         v\n// int \t  UInt32LE  (32-bit unsigned int,littleEndian)                         V\n// float   FloatLE  (32 bits IEEE 754 floating point number,littleEndian)      e\n// flags  UInt16LE  (16-bit unsigned int,littleEndian)                         v\n// ---------------------------------------------------------------------------------------------------\nconst typeReaderFunctions = {\n    'UInt8': (dataView, offset) => dataView.getUint8(offset, false),\n    'UInt16LE': (dataView, offset) => dataView.getUint16(offset, true),\n    'UInt32LE': (dataView, offset) => dataView.getUint32(offset, true),\n    'FloatLE': (dataView, offset) => dataView.getFloat32(offset, true),\n} //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n\n\n// Available block attributes, their offset inside each block and their type:\nlet block_def = {\n    'blockSize': { 'offset': 26, 'type': 'UInt16LE', 'len': 2 },\n    'lastBlockSize': { 'offset': 28, 'type': 'UInt16LE', 'len': 2 },\n    'channel': { 'offset': 30, 'type': 'UInt16LE', 'len': 2 },\n    'packetSize': { 'offset': 32, 'type': 'UInt16LE', 'len': 2 },\n    'frameIndex': { 'offset': 34, 'type': 'UInt32LE', 'len': 4 },\n    'upperLimit': { 'offset': 38, 'type': 'FloatLE', 'len': 4 },\n    'lowerLimit': { 'offset': 42, 'type': 'FloatLE', 'len': 4 },\n    'frequency': { 'offset': 51, 'type': 'UInt8', 'len': 1 },\n    'time1': { 'offset': 58, 'type': 'UInt16LE', 'len': 4 },           // unknown resolution, unknown epoche\n    'waterDepthFt': { 'offset': 62, 'type': 'FloatLE', 'len': 4 },   // in feet\n    'keelDepthFt': { 'offset': 66, 'type': 'FloatLE', 'len': 4 },    // in feet\n    'speedGpsKnots': { 'offset': 98, 'type': 'FloatLE', 'len': 4 },  // in knots\n    'temperature': { 'offset': 102, 'type': 'FloatLE', 'len': 4 },   // in °C\n    'raw_lowrance_longitude': { 'offset': 106, 'type': 'UInt32LE', 'len': 4 },   // Lowrance encoding (easting)\n    'raw_lowrance_latitude': { 'offset': 110, 'type': 'UInt32LE', 'len': 4 },    // Lowrance encoding (northing)\n    'speedWaterKnots': { 'offset': 114, 'type': 'FloatLE', 'len': 4 },  // from \"water wheel sensor\" if present, else GPS value(?)\n    'courseOverGround': { 'offset': 118, 'type': 'FloatLE', 'len': 4 }, // ourseOverGround in radians\n    'altitudeFt': { 'offset': 122, 'type': 'FloatLE', 'len': 4 },       // in feet\n    'heading': { 'offset': 126, 'type': 'FloatLE', 'len': 4 },          // in radians\n    'flags': { 'offset': 130, 'type': 'UInt16LE', 'len': 2 },\n    'time': { 'offset': 138, 'type': 'UInt32LE', 'len': 4 }              // unknown resolution, unknown epoche\n}\n\nfunction readBlock(dataView, block_offset) {\n    let output = {};\n    for (const key in block_def) {\n        if (Object.hasOwnProperty.call(block_def, key)) {\n            const value_byte_offset = block_offset + block_def[key].offset;\n            const length = block_def[key].len;\n            const type = block_def[key].type;\n            const typeReader = typeReaderFunctions[type];\n            output[key] = typeReader(dataView, value_byte_offset)\n            // console.log(`${key} is ${value_byte_offset}`)\n        }\n    }\n    return output;\n}\n\nfunction getLinebreak() {\n    if (navigator.userAgent.indexOf(\"Windows\") != -1) return \"\\r\\n\";\n    else return \"\\n\";\n}\n\n\nfunction convert_sl2(sl2_file_buffer, progress_callback) {\n    return new Promise((resolve, reject) => {\n        let alive_counter = 0   // counter to regularly show, that the script is still running\n\n        let output_rows = [];\n        let block_offset = 0\n        block_offset += 10   // Startindex of the first block (i.e. skip the 10 Bytes of Header)\n\n        const dataView = new DataView(sl2_file_buffer, 0)\n        const sl2_file_size = dataView.byteLength\n        console.log(sl2_file_size, block_offset)\n        var starting_laurence_latitude = null, starting_lowrance_longitude = null;\n        var loop = setInterval(() => {\n            if (block_offset >= sl2_file_size) {\n                // When finished, output some statistics:\n                console.log(\"Found and decoded \" + output_rows.length + \"data blocks.\");\n                clearInterval(loop);\n                resolve(output_rows);\n                return;\n            }\n\n            if (alive_counter % 100 == 0) {\n                var percent = 100.0 * block_offset / sl2_file_size\n                console.log(`${Math.round(percent)}% done...`)\n                progress_callback(Math.round(percent));\n            }\n\n            alive_counter += 1\n\n            let outputRow = readBlock(dataView, block_offset);\n\n            // A few conversions into non-proprietary or metric formats:\n            // =========================================================\n\n            if (outputRow['raw_lowrance_latitude'] != undefined) {\n                outputRow['latitude'] = ((2 * Math.atan(Math.exp(outputRow['raw_lowrance_latitude'] / POLAR_EARTH_RADIUS))) - (PI / 2)) * (180 / PI)\n\n                // Calculate the displacement of the current point from the starting point using the raw laurence lat values:\n                if (starting_laurence_latitude == null) starting_laurence_latitude = outputRow['raw_lowrance_latitude']\n                outputRow['y_displacement'] = outputRow['raw_lowrance_latitude'] - starting_laurence_latitude;\n            }\n\n            if (outputRow['raw_lowrance_longitude'] != undefined) {\n                outputRow['longitude'] = outputRow['raw_lowrance_longitude'] / POLAR_EARTH_RADIUS * (180 / PI)\n                // [ Caution! ] If the expected longitude (in decimal degrees) is *negative*, use the following line instead:\n                if (outputRow['longitude'] > 180) outputRow['longitude'] = (outputRow['raw_lowrance_longitude'] - MAX_UINT4) / POLAR_EARTH_RADIUS * (180 / PI)\n\n                // Calculate the displacement of the current point from the starting point using the raw laurence lon values:\n                if (starting_lowrance_longitude == null) starting_lowrance_longitude = outputRow['raw_lowrance_longitude']\n                outputRow['x_displacement'] = outputRow['raw_lowrance_longitude'] - starting_lowrance_longitude;\n            }\n\n            if (outputRow['waterDepthFt'] != undefined) {\n                outputRow['waterDepthFt'] *= -1;\n                outputRow['waterDepthM'] = outputRow['waterDepthFt'] * FT2M\n            }\n\n            if (outputRow['keelDepthFt'] != undefined) {\n                outputRow['keelDepthFt'] *= -1;\n                outputRow['keelDepthM'] = outputRow['keelDepthFt'] * FT2M\n            }\n\n            if (outputRow['altitudeFt'] != undefined) outputRow['altitudeM'] = outputRow['altitudeFt'] * FT2M\n\n            if (outputRow['speedGpsKnots'] != undefined) outputRow['speedGpsKm'] = outputRow['speedGpsKnots'] * KN2KM\n\n            // console.log(\"Read block:\", outputRow)\n\n            if (outputRow['blockSize'] == 0) {  // corrupt sl2 files may lead to this\n                alert(\"ABORTING! (sl2 file may be corrupt): blockSize = 0 found which will otherwise lead to endless loop.\")\n                reject(\"Corrupt sl2 file\")\n                return;\n            }\n\n            block_offset += outputRow['blockSize']\n\n            // // Save only one set of data per GPS position to csv-file:\n            // unless output_h[[h['latitude'], h['longitude']]]\n            // output_h[[h['latitude'], h['longitude']]] = h['waterDepthM']\n            output_rows.push(outputRow)\n        }, 0)\n    })\n}\n\nmodule.exports = { 'convert_sl2': convert_sl2 };\n","//download.js v4.21, by dandavis; 2008-2018. [MIT] see http://danml.com/download.html for tests/usage\n;(function(root,factory){typeof define==\"function\"&&define.amd?define([],factory):typeof exports==\"object\"?module.exports=factory():root.download=factory()})(this,function(){return function download(data,strFileName,strMimeType){var self=window,defaultMime=\"application/octet-stream\",mimeType=strMimeType||defaultMime,payload=data,url=!strFileName&&!strMimeType&&payload,anchor=document.createElement(\"a\"),toString=function(a){return String(a)},myBlob=self.Blob||self.MozBlob||self.WebKitBlob||toString,fileName=strFileName||\"download\",blob,reader;myBlob=myBlob.call?myBlob.bind(self):Blob,String(this)===\"true\"&&(payload=[payload,mimeType],mimeType=payload[0],payload=payload[1]);if(url&&url.length<2048){fileName=url.split(\"/\").pop().split(\"?\")[0],anchor.href=url;if(anchor.href.indexOf(url)!==-1){var ajax=new XMLHttpRequest;return ajax.open(\"GET\",url,!0),ajax.responseType=\"blob\",ajax.onload=function(e){download(e.target.response,fileName,defaultMime)},setTimeout(function(){ajax.send()},0),ajax}}if(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){if(!(payload.length>2096103.424&&myBlob!==toString))return navigator.msSaveBlob?navigator.msSaveBlob(dataUrlToBlob(payload),fileName):saver(payload);payload=dataUrlToBlob(payload),mimeType=payload.type||defaultMime}else if(/([\\x80-\\xff])/.test(payload)){var i=0,tempUiArr=new Uint8Array(payload.length),mx=tempUiArr.length;for(i;i<mx;++i)tempUiArr[i]=payload.charCodeAt(i);payload=new myBlob([tempUiArr],{type:mimeType})}blob=payload instanceof myBlob?payload:new myBlob([payload],{type:mimeType});function dataUrlToBlob(strUrl){var parts=strUrl.split(/[:;,]/),type=parts[1],indexDecoder=strUrl.indexOf(\"charset\")>0?3:2,decoder=parts[indexDecoder]==\"base64\"?atob:decodeURIComponent,binData=decoder(parts.pop()),mx=binData.length,i=0,uiArr=new Uint8Array(mx);for(i;i<mx;++i)uiArr[i]=binData.charCodeAt(i);return new myBlob([uiArr],{type:type})}function saver(url,winMode){if(\"download\"in anchor)return anchor.href=url,anchor.setAttribute(\"download\",fileName),anchor.className=\"download-js-link\",anchor.innerHTML=\"downloading...\",anchor.style.display=\"none\",anchor.addEventListener(\"click\",function(e){e.stopPropagation(),this.removeEventListener(\"click\",arguments.callee)}),document.body.appendChild(anchor),setTimeout(function(){anchor.click(),document.body.removeChild(anchor),winMode===!0&&setTimeout(function(){self.URL.revokeObjectURL(anchor.href)},250)},66),!0;if(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent))return/^data:/.test(url)&&(url=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/,defaultMime)),window.open(url)||confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")&&(location.href=url),!0;var f=document.createElement(\"iframe\");document.body.appendChild(f),!winMode&&/^data:/.test(url)&&(url=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/,defaultMime)),f.src=url,setTimeout(function(){document.body.removeChild(f)},333)}if(navigator.msSaveBlob)return navigator.msSaveBlob(blob,fileName);if(self.URL)saver(self.URL.createObjectURL(blob),!0);else{if(typeof blob==\"string\"||blob.constructor===toString)try{return saver(\"data:\"+mimeType+\";base64,\"+self.btoa(blob))}catch(y){return saver(\"data:\"+mimeType+\",\"+encodeURIComponent(blob))}reader=new FileReader,reader.onload=function(e){saver(this.result)},reader.readAsDataURL(blob)}return!0}});\n","module.exports = new __parcel__URL__(\"js/sw.js\").toString();"],"names":["factory","$54b47fc030b7b21e$var$columnSelector","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$7aa812910441b77c$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$7aa812910441b77c$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$660c6262632810ec$var$d","document","$660c6262632810ec$export$2e2bcd8739ae039","constructor","element","options","defaults","assign","_events","dom","el","_setElement","toggle","show","classList","undefined","on","event","fn","addEventListener","bind","push","name","getElement","remove","filter","removeEventListener","parentNode","removeChild","nodeType","parent","querySelector","_trigger","detail","CustomEvent","bubbles","cancelable","createEvent","initCustomEvent","dispatchEvent","$f25299528f89fc0f$export$2e2bcd8739ae039","items","display","current","maxHeight","sort","order","placeholder","more","$e32e28c64e9a35f5$var$d","$e32e28c64e9a35f5$export$2e2bcd8739ae039","_sortItems","_convertItems","_setSelected","_renderInit","_setResultMessage","_bindEvents","e","target","contains","_setCurrent","key","keyCode","getItems","Array","from","values","getCurrent","selected","map","setCurrent","currents","isArray","forEach","item","add","findItem","nodeName","dataset","value","find","trigger","parseInt","selection","count","result","test","replace","innerHTML","frag","createDocumentFragment","appendChild","_renderResultDiv","_renderList","createElement","className","wrap","style","_renderListItems","list","a","b","$1b952d1406bf4379$exports","$1b952d1406bf4379$var$PI","Math","PI","$1b952d1406bf4379$var$FT2M","$1b952d1406bf4379$var$KN2KM","$1b952d1406bf4379$var$typeReaderFunctions","dataView","offset","getUint8","getUint16","getUint32","getFloat32","$1b952d1406bf4379$var$block_def","sl2_file_buffer","progress_callback","Promise","resolve","reject","block_offset","alive_counter","output_rows","DataView","sl2_file_size","byteLength","console","log","starting_laurence_latitude","starting_lowrance_longitude","loop","setInterval","clearInterval","percent","round","outputRow","$1b952d1406bf4379$var$readBlock","output","hasOwnProperty","value_byte_offset","len","typeReader","type","atan","exp","alert","$bcfa223af1a5e435$exports","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","anchor","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","response","setTimeout","send","navigator","msSaveBlob","dataUrlToBlob","saver","tempUiArr","Uint8Array","mx","charCodeAt","strUrl","parts","binData","decoder","atob","decodeURIComponent","uiArr","winMode","setAttribute","stopPropagation","arguments","callee","body","click","revokeObjectURL","userAgent","confirm","location","f","src","createObjectURL","btoa","y","encodeURIComponent","FileReader","readAsDataURL","define","amd","$66a00a1111e176ae$exports","$54b47fc030b7b21e$var$getLinebreak","$54b47fc030b7b21e$var$handleFiles","evt","file","files","jsFileReader","file_contents","getElementById","disabled","message_el","progress_el","convert_sl2","percent_done","then","button","$54b47fc030b7b21e$var$addColumnSelctionPicker","resultObject","onclick","string","output_format","$54b47fc030b7b21e$var$resultToCSV","columsToInclude","output_csv_string","columns","keys","rowName","join","keyName","$54b47fc030b7b21e$var$getSelectedColumns","selectedOptions","$54b47fc030b7b21e$var$resultToKML","output_kml_string","catch","error","readAsArrayBuffer","serviceWorker","inputElement"],"version":3,"file":"index.d873de12.js.map"}